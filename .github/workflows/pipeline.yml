name: Pipeline
on: [push]

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Test backend
        run: |
          cd $GITHUB_WORKSPACE
          npm i
          npm run test
      - name: Test frontend
        run: |
          cd $GITHUB_WORKSPACE/frontend
          echo "No frontend tests yet"
  build:
    name: "Build"
    needs: test
    if: contains(github.ref, 'master') || contains(github.ref, 'tls')
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-image-tag.outputs.image_tag }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tags/labels for backend
        id: backend-meta
        uses: docker/metadata-action@v3
        with:
          images: jmanche/mern-backend
          tags: |
            type=sha
            latest

      - name: Extract tags/labels for backend
        id: frontend-meta
        uses: docker/metadata-action@v3
        with:
          images: jmanche/mern-frontend
          tags: |
            type=sha
            latest

      - name: Set IMAGE_TAG
        id: set-image-tag
        run: echo "::set-output name=image_tag::`echo sha-$(git rev-parse --short HEAD)`"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}

  deploy:
    name: "Deploy"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/docker
          chmod 600 ~/.ssh/docker
          printf "Host mern\n  Hostname ${{ secrets.SSH_HOST }}\n  User ${{ secrets.SSH_USER }}\n  IdentityFile ~/.ssh/docker\n" > ~/.ssh/config
          ssh-keyscan ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Ensure TLS certs exist
        run: |
          echo "TODO: Check for TLS certs on remote host, create 3 certs if they don't exist"

      - name: Deploy to swarm
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
        run: |
          docker --host "ssh://mern" stack deploy -c docker-compose.yml --with-registry-auth mern
